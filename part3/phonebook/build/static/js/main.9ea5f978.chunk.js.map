{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","onSubmit","nameValue","nameOnChange","numberValue","numberOnChange","type","Persons","filterPerson","persons","deletePerson","filter","person","name","toLowerCase","includes","map","key","number","id","onClick","baseUrl","axios","get","newObject","post","changedObject","put","delete","Notification","message","style","color","fontStyle","fontSize","display","justifyContent","background","border","marginBottom","borderRadius","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilterPerson","setMessage","useEffect","PersonsServices","then","response","data","event","target","personToUpdate","preventDefault","some","window","confirm","result","updatedPerson","setTimeout","location","reload","concat","catch","error","e","personName","toString","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ea5f978.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ value, onChange}) => {\n    return (\n        <div>\n            Filter by name: <input value={value} onChange={onChange} />\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({ onSubmit, nameValue, nameOnChange, numberValue, numberOnChange }) => {\n    return (\n        <form onSubmit={onSubmit}>\n            <div>\n                Name: <input value={nameValue} onChange={nameOnChange} />\n            </div>\n            <div>\n                Number: <input value={numberValue} onChange={numberOnChange} />\n            </div>\n            <div>\n                <button type=\"submit\">ADD</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ filterPerson, persons, deletePerson }) => {\n    return (\n        <div>\n            {persons.filter( person => \n                person.name.toLowerCase().includes(filterPerson.toLowerCase())).map(person =>\n                    <div key={person.name}>\n                        <p>{person.name} {person.number}</p>\n                        <button value={person.id} onClick={deletePerson}>Delete</button>\n                    </div>\n            )}\n        </div>\n        )\n}\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = \"/api/persons\"\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = (newObject) => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst updatePerson = (id, changedObject) => {\n    return axios.put(`${baseUrl}/${id}`, changedObject)\n    \n}\n\nconst deletePerson = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {\n    getAll,\n    create,\n    updatePerson,\n    deletePerson,\n}","import React from 'react'\n\nconst Notification = ({ message }) => {\n    const notficationStyle = {\n        color: 'black',\n        fontStyle: 'bold',\n        fontSize: 25,\n        display: 'flex',\n        justifyContent: 'center',\n        background:'lightgreen',\n        border: \"1px solid black\",\n        marginBottom: 10,\n        borderRadius: 20,\n    }\n\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div style={notficationStyle}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport PersonsServices from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n    const [ persons, setPersons ] = useState([]) \n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber] = useState('')\n    const [ filterPerson, setFilterPerson] = useState('')\n    const [ message, setMessage ] = useState(null)\n\n    useEffect(() => {\n        PersonsServices\n            .getAll()\n            .then(response => {\n                setPersons(response.data)\n            })\n    },[]);\n    \n    const updatePerson = (id, personToUpdate) => {\n        PersonsServices\n            .updatePerson(id, personToUpdate)\n            .then(response => {\n                    setPersons(persons.map(person => person.id !== response.id ? person : response.data))\n                    setMessage(`${personToUpdate.name}'s number has been updated!`)\n                    setTimeout(() => {\n                        setMessage(null)\n                        window.location.reload()\n                    }, 2000)\n                }\n            )\n    }\n\n    const deletePerson = (personToDelete, personName) => {\n        PersonsServices\n                .deletePerson(personToDelete)\n                .then(response => {\n                    setMessage(`${personName[0].name} has been deleted from the list!`)\n                    setTimeout(() => {\n                        setMessage(null)\n                        window.location.reload()\n                    }, 2000)\n                })\n                .catch(error => {\n                    setMessage(`${personName[0].name} was already deleted`)\n                    setTimeout(() => {\n                        setMessage(null)\n                        window.location.reload()\n                    }, 2000)\n                })\n    }\n\n    const createPerson = (personToCreate) => {\n        PersonsServices\n            .create(personToCreate)\n            .then( response => {\n                setPersons(persons.concat(response.data))\n                setNewName(\"\")\n                setNewNumber(\"\")\n                setMessage(`${response.data.name} has been added to the list!`)\n                setTimeout(() => {\n                    setMessage(null)\n                    window.location.reload()\n                }, 2000)\n            })\n            .catch(error => {\n                setMessage(error.response.data)\n                setTimeout(() => {\n                    setMessage(null)\n                    window.location.reload()\n                }, 2000)\n            })\n    }\n\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        if (persons.some(person => person.name === newName)) {\n            if(window.confirm(`${newName} is already in the Phonebook, replace the old number with a new one?`)) {\n                const result = persons.filter(person => person.name === newName)\n                const updatedPerson = {...result[0], number: newNumber}\n                updatePerson(updatedPerson.id, updatedPerson)\n            }\n        } else {\n            const personObject = {\n                name: newName,\n                number: newNumber\n            }\n\n            createPerson(personObject)\n        }\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        setFilterPerson(event.target.value)\n    }\n\n    const handleDeletePerson = (e) => {\n        const personName = persons.filter(person => person.id.toString() === e.target.value.toString())\n        if (window.confirm(\"Confirm to delete\")) {\n            deletePerson(e.target.value, personName)\n        }\n    }\n\n\n    return (\n        <div>\n            <h1>Phonebook</h1>\n            <Notification message={message} />\n            <Filter value={filterPerson} onChange={handleFilterChange} />\n            <h2>Add a New Entry</h2>\n            <PersonForm \n                onSubmit={addPerson} nameValue={newName} nameOnChange={handleNameChange} \n                numberValue={newNumber} numberOnChange={handleNumberChange}\n            />\n            <h2>Numbers</h2>\n            <Persons filterPerson={filterPerson} persons={persons} deletePerson={handleDeletePerson} />\n        </div>\n    )\n}\n\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}